{"ast":null,"code":"import _classCallCheck from \"/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/src/views/forms/validation.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Card, CardBody, CardTitle, Row, Col, Button, FormGroup, Label } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\"; // import classnames from \"classnames\";\n\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport ContentSubHeader from \"../../components/contentHead/contentSubHeader\";\nvar formSchema = Yup.object().shape({\n  required: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  number: Yup.number().required(\"Required\"),\n  url: Yup.string().url().required(\"Required\"),\n  date: Yup.date().required(\"Required\"),\n  minlength: Yup.string().min(4, \"Too Short!\").required(\"Required\"),\n  maxlength: Yup.string().max(5, \"Too Long!\").required(\"Required\")\n});\n\nvar Validation = /*#__PURE__*/function (_Component) {\n  _inherits(Validation, _Component);\n\n  function Validation() {\n    _classCallCheck(this, Validation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Validation).apply(this, arguments));\n  }\n\n  _createClass(Validation, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(ContentHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, \"Form Validation\"), /*#__PURE__*/React.createElement(ContentSubHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"Form Validation example.\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://github.com/jaredpalmer/formik\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://img.shields.io/github/stars/jaredpalmer/formik.svg?style=social\",\n        alt: \"Stars\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://img.shields.io/npm/dm/formik.svg\",\n        alt: \"Downloads\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, \"Formik\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://github.com/jaredpalmer/formik\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }\n      }, \"Formik\"), \" is designed to manage forms with complex validation with ease. Formik supports synchronous and asynchronous form-level and field-level validation. Furthermore, it comes with baked-in support for schema-based form-level validation through Yup.\"), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          required: \"\",\n          email: \"\",\n          url: \"\",\n          number: \"\",\n          date: \"\",\n          minlength: \"\",\n          maxlength: \"\"\n        },\n        validationSchema: formSchema,\n        onSubmit: function onSubmit(values) {\n          // same shape as initial values\n          console.log(values);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, function (_ref) {\n        var errors = _ref.errors,\n            touched = _ref.touched;\n        return /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"required\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }\n        }, \"Required\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"required\",\n          id: \"required\",\n          className: \"form-control \".concat(errors.required && touched.required && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }\n        }), errors.required && touched.required ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 76\n          }\n        }, errors.required) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"email\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          className: \"form-control \".concat(errors.email && touched.email && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 37\n          }\n        }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 70\n          }\n        }, errors.email) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"url\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }\n        }, \"Website URL\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"url\",\n          id: \"url\",\n          className: \"form-control \".concat(errors.url && touched.url && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }\n        }), errors.url && touched.url ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 66\n          }\n        }, errors.url) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"number\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }\n        }, \"Number\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"number\",\n          id: \"number\",\n          className: \"form-control \".concat(errors.number && touched.number && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }\n        }), errors.number && touched.number ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 72\n          }\n        }, errors.number) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"date\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }\n        }, \"Date\"), /*#__PURE__*/React.createElement(Field, {\n          type: \"date\",\n          name: \"date\",\n          id: \"date\",\n          className: \"form-control \".concat(errors.date && touched.date && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }\n        }), errors.date && touched.date ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 68\n          }\n        }, errors.date) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"minlength\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }\n        }, \"Min Length (Minimum 4 Characters)\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"minlength\",\n          id: \"minlength\",\n          className: \"form-control \".concat(errors.minlength && touched.minlength && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }\n        }), errors.minlength && touched.minlength ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 78\n          }\n        }, errors.minlength) : null), /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          for: \"maxlength\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }\n        }, \"Max Length (Maximum 5 Characters)\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"maxlength\",\n          id: \"maxlength\",\n          className: \"form-control \".concat(errors.maxlength && touched.maxlength && 'is-invalid'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }\n        }), errors.maxlength && touched.maxlength ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 78\n          }\n        }, errors.maxlength) : null), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 34\n          }\n        }, \"Submit\"));\n      }))))));\n    }\n  }]);\n\n  return Validation;\n}(Component);\n\nexport default Validation;","map":{"version":3,"sources":["/mnt/Storage1TB/dev/projects/route-app/web-app/apex-react/src/views/forms/validation.js"],"names":["React","Component","Fragment","Card","CardBody","CardTitle","Row","Col","Button","FormGroup","Label","Formik","Field","Form","Yup","ContentHeader","ContentSubHeader","formSchema","object","shape","required","string","email","number","url","date","minlength","min","maxlength","max","Validation","values","console","log","errors","touched"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Card, CardBody, CardTitle, Row, Col, Button, FormGroup, Label } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\n// import classnames from \"classnames\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport ContentSubHeader from \"../../components/contentHead/contentSubHeader\";\n\nconst formSchema = Yup.object().shape({\n   required: Yup.string()\n      .required(\"Required\"),\n   email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"Required\"),\n   number: Yup.number()\n      .required(\"Required\"),\n   url: Yup.string()\n      .url()\n      .required(\"Required\"),\n   date: Yup.date()\n      .required(\"Required\"),\n   minlength: Yup.string()\n      .min(4, \"Too Short!\")\n      .required(\"Required\"),\n   maxlength: Yup.string()\n      .max(5, \"Too Long!\")\n      .required(\"Required\"),\n});\n\nclass Validation extends Component {\n   render() {\n      return (\n         <Fragment>\n            <ContentHeader>Form Validation</ContentHeader>\n            <ContentSubHeader>\n            <p>Form Validation example.</p>\n            <a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src=\"https://img.shields.io/github/stars/jaredpalmer/formik.svg?style=social\" alt=\"Stars\" />\n                  <img src=\"https://img.shields.io/npm/dm/formik.svg\" alt=\"Downloads\"/>\n            </a>\n            </ContentSubHeader>\n            <Row>\n               <Col sm=\"12\">\n                  <Card>\n                     <CardBody>\n                        <CardTitle>Formik</CardTitle>\n                        <p><a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noopener noreferrer\">Formik</a> is designed to manage forms with complex validation with ease. Formik supports synchronous and asynchronous form-level and field-level validation. Furthermore, it comes with baked-in support for schema-based form-level validation through Yup.</p>\n                        <Formik\n                           initialValues={{\n                              required: \"\",\n                              email: \"\",\n                              url: \"\",\n                              number: \"\",\n                              date: \"\",\n                              minlength: \"\",\n                              maxlength: \"\"\n                           }}\n                           validationSchema={formSchema}\n                           onSubmit={values => {\n                              // same shape as initial values\n                              console.log(values);\n                           }}\n                        >\n                           {({ errors, touched }) => (\n                              <Form>\n                                 <FormGroup>\n                                    <Label for=\"required\">Required</Label>\n                                    <Field name=\"required\" id=\"required\" className={`form-control ${errors.required && touched.required && 'is-invalid'}`} />\n                                    {errors.required && touched.required ? <div className=\"invalid-feedback\">{errors.required}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"email\">Email</Label>\n                                    <Field type=\"email\" name=\"email\" id=\"email\" className={`form-control ${errors.email && touched.email && 'is-invalid'}`} />\n                                    {errors.email && touched.email ? <div className=\"invalid-feedback\">{errors.email}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"url\">Website URL</Label>\n                                    <Field name=\"url\" id=\"url\" className={`form-control ${errors.url && touched.url && 'is-invalid'}`} />\n                                    {errors.url && touched.url ? <div className=\"invalid-feedback\">{errors.url}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"number\">Number</Label>\n                                    <Field name=\"number\" id=\"number\" className={`form-control ${errors.number && touched.number && 'is-invalid'}`} />\n                                    {errors.number && touched.number ? <div className=\"invalid-feedback\">{errors.number}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"date\">Date</Label>\n                                    <Field type=\"date\" name=\"date\" id=\"date\" className={`form-control ${errors.date && touched.date && 'is-invalid'}`} />\n                                    {errors.date && touched.date ? <div className=\"invalid-feedback\">{errors.date}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"minlength\">Min Length (Minimum 4 Characters)</Label>\n                                    <Field name=\"minlength\" id=\"minlength\" className={`form-control ${errors.minlength && touched.minlength && 'is-invalid'}`} />\n                                    {errors.minlength && touched.minlength ? <div className=\"invalid-feedback\">{errors.minlength}</div> : null}\n                                 </FormGroup>\n                                 <FormGroup>\n                                    <Label for=\"maxlength\">Max Length (Maximum 5 Characters)</Label>\n                                    <Field name=\"maxlength\" id=\"maxlength\" className={`form-control ${errors.maxlength && touched.maxlength && 'is-invalid'}`} />\n                                    {errors.maxlength && touched.maxlength ? <div className=\"invalid-feedback\">{errors.maxlength}</div> : null}\n                                 </FormGroup>\n                                 <Button type=\"submit\">Submit</Button>\n                              </Form>\n                           )}\n                        </Formik>\n                     </CardBody>\n                  </Card>\n               </Col>\n            </Row>\n         </Fragment>\n      );\n   }\n}\n\nexport default Validation;\n"]},"metadata":{},"sourceType":"module"}